name: CI

on:
  pull_request:
    branches: [main]
  push:
    branches: [main, "feature/**"]

jobs:
  build:
    name: Build Laravel App
    runs-on: ubuntu-latest
    outputs:
      artifact-name: app-artifact
    steps:
      - uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: 8.3

      - name: Bootstrap Laravel App
        run: |
          php ci.php
          mkdir -p storage/app storage/framework storage/logs
          touch storage/.gitkeep
          touch database/database.sqlite

      - name: Upload Build Artifact
        uses: actions/upload-artifact@v4
        with:
          name: app-artifact
          path: |
            .env
            artisan
            app
            bootstrap
            config
            database
            public
            routes
            storage
            tests
            vendor
            composer.*
            phpunit.xml
            clover.xml

  pest:
    name: Pest (PHP ${{ matrix.php }} on ${{ matrix.os }})
    needs: build
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        php: [8.2, 8.3, 8.4]
        os: [ubuntu-latest, windows-latest]
      fail-fast: false
    env:
      DB_DATABASE: testing
      DB_PASSWORD: secretroot
      DB_USER: root
      APP_KEY: base64:1NxfrNErQ0vo1ZnPcLeVhnE7tOZdKlKiFORzPA92krM=

    services:
      mysql:
        image: mysql:latest
        env:
          MYSQL_DATABASE: testing
          MYSQL_ROOT_PASSWORD: secretroot
        ports:
          - 3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
      - uses: actions/checkout@v4

      - name: Download App Artifact
        uses: actions/download-artifact@v4
        with:
          name: app-artifact

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          coverage: pcov
          tools: composer

      - name: Fix Permissions (Linux only)
        if: runner.os == 'Linux'
        run: |
          [ -d storage ] && chmod -R 755 storage || echo "⚠️  storage not found"
          [ -d bootstrap ] && chmod -R 755 bootstrap || echo "⚠️  bootstrap not found"

      - name: Run Pest
        run: vendor/bin/pest --coverage-clover=clover.xml
        env:
          DB_PORT: ${{ job.services.mysql.ports['3306'] }}
          DB_HOST: 127.0.0.1

  phpstan:
    name: PHPStan
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Download App Artifact
        uses: actions/download-artifact@v4
        with:
          name: app-artifact

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: 8.3

      - name: Run PHPStan
        run: vendor/bin/phpstan analyse

  codacy:
    name: Codacy Coverage
    needs: pest
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: "8.2"
          coverage: pcov

      - name: Download App Artifact
        uses: actions/download-artifact@v4
        with:
          name: app-artifact

      - name: Run codacy-coverage-reporter
        uses: codacy/codacy-coverage-reporter-action@v1.3.0
        with:
          api-token: ${{ secrets.CODACY }}
          coverage-reports: clover.xml

  codeclimate:
    name: Code Climate Coverage
    needs: pest
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: "8.2"
          coverage: pcov

      - name: Download App Artifact
        uses: actions/download-artifact@v4
        with:
          name: app-artifact

      - name: Run Code Climate Reporter
        uses: paambaati/codeclimate-action@v9.0.0
        env:
          CC_TEST_REPORTER_ID: ${{ secrets.CODECLIMATE }}
        with:
          coverageCommand: vendor/bin/pest --coverage-clover clover.xml
